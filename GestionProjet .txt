Problèmes/Questions techniques  : 
- varchar trop court pour les heures d'ouverture du restau en db (mit à 10000 de mon côté )


Reccurence des activités cahier des charges : 
- Les clients ne peuvent pas définir d'activité récurrente
- La récurrence d'activité fonctionne pour le moment pour tous les jours/deuxjours/semaines mais l'idrecurrente n'est pas affecté (voir commentaire controllerform)
Problème : comment gérer une activité réservable récurrente : - début/fin de la réservabilité par rapport à celle orignale : même différence de temps entre la date et la date de réservation choisie ? 
- Modification : 
		- Pouvoir modifier juste une récurrence n'affectant pas les autres 
		- Pouvoir modifier l'activité originale en choisissant : -d'affecter toutes les récurrence (annulant les modifications uniques portant sur elles)
																- affecter certaines choisies parmi la liste des récurrences : dans cette liste on doit
																avoir un message pour celles sur lequelles des modifications ont été apportées (éventuellement voir la nature des modifs)

Il faut donc gérer le controller et le formulaire  en fonction de ca ...																
		
		
Pour toi mon rayou en priorité : 
- Récurrence des activités 
- Ajouter membre à équipe 
- Effectuer les modifs pour modifActivite au niveau du type (faire comme ajoutactivite )







Choix de conception : 
- On doit revoir les vues pour l'affichage des services : il faudrait pouvoir consulter les restaurants avec les heures d'ouverture, dans la même 
page que les lieux communs je pense et qu'on appellerait "nos services". => à définir 
- On utilise controller_client dans la classe user pour gérer les droits, n'est ce pas un peu risqué ? On doit pouvoir changer aussi les droits du staff non ? Si non faudra ajouter une erreur pouer empêcher de le faire 


Modif db : 



Activite : 
-Ajout de deux possibilités pour la durée d'une activité : Heure de fin + durée avec deux menus déroulants heure/min. Modifie l'heure de fin en dynamique et inversement 
	
- Gérer l'affichage des photos déjà envoyées dans la modification des entités 
- Récurrence des acitvités 
- Problème avec bouton de modification et de réservation dans gérer activité 
- Assurer la gestion des photos (et la transmission des données du formulaire) dans gérer activité 
- Ajout d'une photo 
- Modifier activité : - si on modifie la date de début modifier en dynamique la date de début et fin réservation 
						- gestion des types différente de ajoutActivite 
- Client ne peut pas mettre d'activité payante 
						
						

Probleme technique : 
- 





Réservation : 
-Secu réservation 
- Je voulais mettre type : $data['type'] dans les boutons d'envoi consulter/annuler mais dans firebug il me dit qu'il ne connait pas
le type activite. En revanche quand je mets  type : 'ACTIVITE' ca fonctionne, j'ai laissé comme aç 



Partenaire : 
- Ajout des photos (mises NULL par défaut dans ma db)  
- Ajout d'un service d'envoi de mail depuis l'appli à un partenaire avec un bouton de contact 



Users : 
- Gérer l'ajout des users staff avec date de départ et emplacement 
- Blocage des comptes fonctionne uniquement sur les non staff 
- gérer autorisation  avec notif de validation 
- Prévoir un clef oubliée avec envoi par mail d'une nouvelle clef (car celle en db devra être cryptée)
- Après blocage des sous users renvoyer sur la même page  
- Ajouter date arrivée 
- Prévoir un type "PARTENAIRE"


Lieu  : 
- Suppression d'un lieu : autoriser pour un lieu utilisé réservé ou utilisé dans une activité ? message d'erreur ? suppression cascade ? 
	

	
	
Etat des lieux : 
- Ajouter controller objet : datedeb après aujourd'hui et user dispo sur la plage horaire 
- Reservation ne fonctionne pas si aucune plage n'est sélectionnée : erreur db 

 

 Equipe : 
- Autorisation des membres de l'équipe à gérer 
- Une équipe joue sur une semaine : supprimée à la fin ou score remis à 0 ? comme ça tous les samedis ? 
Demande d'ajouter une date de création ou d'expiration à 'équipe ? 
- Suppression des équipes impossibles => contraintes sur les membres ? 
- faire fonctionner ajout membres (je ne sais pas ce que retourne la fonction de recherche) => controller formulaire de equipe_membres à faire 

- Ajout des points à une équipe : 
								- Désigner 
 

Pages à créer :
 
Client : 


-  Réserver : 	
				-	du pain, viennoiseries (les produits proposés devront être ajoutés par l'admin)
				-  réserver un lieu : affichage de tous les lieux + proposition de réservation avec menu déroulant proposant les heures restantes et demande de la durée 
						=> un lieu doit avoir un critère de réservabilité et une limite de durée de réservation définie 
			





Admin: 
- Gérer réservations : affichage de celles ci avec critères de choix 
 
- Ajouter des points : à une équipe et un user : l'admin le fait ou c'est automatique en désignant le gagnant d'une activité 
- Ajouter / gérer les options de commandes de pain : savoir si c'est un partenaire ou admin 
- Ajouter / Gérer les options du restaurant 






TODO Lointain (améliorations possibles et détails dans un futur lointain ): 
- tous les messages d'alerte de suppression 
- alerte pour création d'une activité dans plus d'un an 
- administration d'une activité partenaire par un admin 
- gestion des langues 
- gérer une attribution des points de l'activité avec classement (l'activité vaut 100 pour premier, 50 pour deuxieme etc ...) 
- inventaire sur l'appli ? 
- système de messages au staff pour un contact direct 
- revoir les systèmes de modif en place avec la technique du set id 
- Gestion des doublons pour la plupart des entités => 
- Message d'alerte si un membre de la même famille réserve une activité alors qu'un autre membre a déjà réservé 
- choisir un mode de répartition des états des lieux pour le staff 
- case "appliquer la même horaire à tous les jours" pour restau et lieux communs une fois l'horaire du lundi définie 

Autres choix de conception à définir au moment de l'implémentation dans un camping: 
- Veulent ils pouvoir définir une autre occurence pour une activité sans pour autant avoir une récurrence 

Autres fonctionnalités : voir la fiche descriptives des membres du staff (photo et petite biographie)