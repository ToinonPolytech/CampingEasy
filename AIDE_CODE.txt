Comment mettre en place l'upload des images (Exemple dans ajoutProblemeTechniqueForm.php) : 
Rajouter un label : <label for="imageAjax" onclick="addImage();">Ajouter une photo</label>
Modifier le enctype du formulaire comme ceci : enctype="multipart/form-data"
Modifier les arguments de loadTo (le button), 2ème argument comme ceci : (window.FormData) ? new FormData($('#ID_DU_FORM')[0]) : $('#ID_DU_FORM').serialize()

Le formulaire est mis en place.
Coté php (Exemple dans problemeTechnique.controllerForm.php) : 
Rajouter : require_once(i("images.class.php"));
Rajouter ceci avant tout ce qui est Controller :
$photos="";
if (isset($_FILES))
{
	$dir="pbTechniques";
	$maxsize=2048000;
	$extensions_valides = array( 'jpg' , 'jpeg' , 'gif' , 'png' , 'bmp' );
	$imagesUpload=new Image_upload($_FILES, $maxsize, $extensions_valides, $dir);
	$photos=$imagesUpload->getUrl();
}
		
if (!isset($imagesUpload) || !$imagesUpload->getError())
{
	/** LE RESTE DU CODE **/
}
else
{
	echo "ERREUR : Un problème est survenu lors de l'envoi du formulaire.";
}

Le coté php est géré
->getUrl(), renvoie l'ensemble des chemins vers le fichier sous la forme de chemin1,chemin2,
$dir, définie le répertoire de sauvegarde

loadTo(urlCalled, dataUsed, location, type, isImage, callback)

urlCalled : Utilise le php : <?php echo str_replace($_SERVER["DOCUMENT_ROOT"], "", i("nom_fichier.php")); ?>
dataUsed : - isImage est true alors mettre le selector cad : "#nom_form" (<form id="idform" => donc "#idform") 
sinon mettre un objet JSON {var1 : value, var2 : value} ou utiliser $("#nom_form").serialize()
location : selector du lieu où l'information sera ecrite. 
type : 
- preprend : ecrira e' debut de location
- replace : remplace le contenu de la location par le nouveau
- append : ecrit a la fin de la location
isImage : true pour informer au script quune image sera upload
false sinon
callback : une fonction qui sera appelle a la fin du script 

Warning : Seul les 3premiers arguments sont obligatoires

loadToMain(urlCalled, dataUsed, callback)
 
 Appelle la fonction LoadTo avec les memes arguments mais type : "replace" location : "#mainAjax", isImage : false, dataUsed : {}
 
 Warning : Seul les 2premiers args sont obligatoires
 
 Sinon  ne pas oublier le return false apres l.appel de la fonction dans un bouton
 
 Utilise : $.extend({}, object1, object2); => reunis plusieurs objets JSON en un
 
 ------------- DATABASE -----------
 
 pour les args where : array("col" => arg)
 Plusieurs possibilites : 
 soit une valeur simple appliquant un =
 sinon un array(type, val) 
 type : " LIKE ", "OR", "<=" ect..... 
 En fonction val peut prendre plusieurs valeurs "explication soon"
 

